name: Shoe-cart CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    paths-ignore:
      - 'README.md'
      - 'charts/**'
      - 'dockerfile'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v2

      # Install PHP with dependencies
      - name: Install PHP & Dependencies
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          extensions: mbstring, pdo, mysql

      - name: Generate random tag number
        run: |
          echo "VERSION=${RANDOM}" >> $GITHUB_ENV 

      - name: Logging into Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: "Build and Push Docker Image"
        env:
          IMAGE_NAME: shopping
          USERNAME: abatan
        run: |
          docker build -t $USERNAME/$IMAGE_NAME:${{ env.VERSION }} .
          docker push $USERNAME/$IMAGE_NAME:${{ env.VERSION }}

      - name: "Install kubectl"
        uses: azure/setup-kubectl@v3
        with: 
          version: "v1.19.3"
        id: "install-kubectl"

      - name: "Setup AWS Credentials"
        uses: aws-actions/configure-aws-credentials@v4
        with: 
          aws-region: "us-east-1"
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}

      - name: "Connect to the EKS Cluster"
        run: |
          aws eks update-kubeconfig --name cluster

      - name: "Install Helm"
        uses: azure/setup-helm@v4.2.0
        id: "install-helm"

      - name: "Deploy Application via Helm"
        run: |
          helm upgrade --install shopping-app shopping/ -f shopping/values.yaml \
            --set image.tag=${{ env.VERSION }} \
            --set replicaCount=3

      - name: "Announce the Latest Deployment Version"
        uses: dawidd6/action-send-mail@v3
        with:
          username: taykeny94@gmail
          password: ${{ secrets.EMAIL_PASSWORD }}
          server_address: smtp.gmail.com
          server_port: 465
          secure: true
          subject: "New Docker Image Version for Shopping Web App"
          to: "abatankehinde1999@gmail.com"
          from: Healer <taykeny94@gmail>
          body: "New image build: ${{ env.VERSION }}"






  
      

      

      